1. 图形程序设计

(1)编写一个用于绘图的DrawLineComponent extends JComponent。覆盖其paintComponent方法，进行图形的绘制。
该组件可以根据给定的点(Point2D)的集合，绘制出对应的曲线（相邻的两点构成线段，曲线实际上是折线）。

(2)改造DrawLineComponent，使其可以根据选择绘制出正弦曲线、余弦曲线或者画出自己编写表达式(如y=kx、y=sinx+cosx、y=e-x等)的曲线。

参考：基础代码DrawLineTest.java

说明：图形可以看作是线的组合，线则是点的组合，只要构造出点的集合，就可以构造出对应的线，进而画出整个图形。

进阶1：如果还想通过上面的程序画其他曲线？如何进行？试编写一个通用的绘图程序。

进阶2(选做)：现在编写的程序中，点的集合是放在内存中，如何将点的集合放入文件，下回启动时程序可以从文件中读取点的集合进而画出相应图形。

2. Swing用户界面组件

(1)实现一个登录界面，需要对输入的用户名和密码进行验证；所有有效用户名列表和其所对应的密码，可以暂时存在某个数组或者集合中。学有余力的同学可以考虑添加一个验证码(一般是一串随机字符和数字的图片，可加干扰线)的校验。

(2)当登录失败的时候，弹出一个对话框，显示一个密码输入错误或者用户名不存的对话框。

(3)登录成功的时候，显示主界面。主界面有一个"项目"的菜单(menu)，该菜单有3个菜单项(menu item)，分别是曲线演示、打开文件、退出。

(4)在“曲线演示”主界面中可以根据选择(利用组合框选择正弦、余弦、自编曲线)，绘制出相应的图形(图形绘制组件使用第1题的程序)。

3. 事件处理

(1)实现对前面绘制出来的正弦曲线使用鼠标右键拖动(即平移，整个曲线随鼠标移动而移动)。

(2)使用鼠标左键拖拽曲线上的某个点以改变曲线的图形。类似DraggableCurve.jar执行的效果。

4. 画笔程序

实现简单的鼠标画笔功能，参考Windows的“画图”程序。

思路：

(1)需要有一个集合专门存储鼠标按下时产生的点的坐标，但要注意：只能存储一条连续的曲线，鼠标松开时这个List就不再存储接下来的点。

(2)不同的连续曲线存储在不同的集合，所以可能有多个集合。

(3)每回移动鼠标时，要重绘所有集合中所有的点。

(4)关闭程序时保存内存中所有List中的所有点(可使用文件)。